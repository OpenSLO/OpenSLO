- apiVersion: openslo/v1
  kind: SLI
  metadata:
    name: search-availability
    displayName: Searching availability
    labels:
      env:
        - dev
      team:
        - team-a
        - team-b
  spec:
    description: X% of search requests are successful
    ratioMetric:
      counter: true
      good:
        metricSource:
          metricSourceRef: my-datadog
          type: Datadog
          spec:
            query: sum:trace.http.request.hits.by_http_status{http.status_code:200}.as_count()
      total:
        metricSource:
          metricSourceRef: my-datadog
          type: Datadog
          spec:
            query: sum:trace.http.request.hits.by_http_status{*}.as_count()
- apiVersion: openslo/v1
  kind: SLI
  metadata:
    name: end-user-response
    displayName: App end user response
    labels:
      env:
        - dev
      team:
        - team-a
        - team-b
  spec:
    ratioMetric:
      counter: false
      bad:
        metricSource:
          metricSourceRef: appdynamics
          type: AppDynamics
          spec:
            applicationName: my-app
            metricPath: End User Experience|App|Slow Requests
      total:
        metricSource:
          metricSourceRef: appdynamics
          type: AppDynamics
          spec:
            applicationName: my-app
            metricPath: End User Experience|App|Normal Requests
- apiVersion: openslo/v1
  kind: SLI
  metadata:
    name: wifi-client-satisfaction
    displayName: WiFi client satisfaction
    labels:
      env:
        - dev
      team:
        - team-a
        - team-b
  spec:
    ratioMetric:
      description: Monitors that we have an average wifi connection satisfaction
      rawType: success
      raw:
        metricSource:
          metricSourceRef: prometheus
          type: Prometheus
          spec:
            query: |
              1 - (
                sum(sum_over_time(unifipoller_client_satisfaction_ratio[{{.window}}]))
                /
                sum(count_over_time(unifipoller_client_satisfaction_ratio[{{.window}}]))
              )
- apiVersion: openslo/v1
  kind: SLI
  metadata:
    name: annotator-throughput
    displayName: Annotator service throughput
    annotations:
      openslo.com/service-folder: ./my/directory
    labels:
      env:
        - dev
      team:
        - team-a
        - team-b
  spec:
    description: X% of time messages are processed without delay by the processing pipeline (expected value ~100%)
    thresholdMetric:
      metricSource:
        metricSourceRef: my-prometheus
        type: Prometheus
        spec:
          query: sum(min_over_time(kafka_consumergroup_lag{k8s_cluster="prod", consumergroup="annotator", topic="annotator-in"}[2m]))
