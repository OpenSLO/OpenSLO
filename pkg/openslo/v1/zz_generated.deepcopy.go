//go:build !ignore_autogenerated

// Code generated by controller-gen. DO NOT EDIT.

package v1

import (
	"encoding/json"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertCondition) DeepCopyInto(out *AlertCondition) {
	*out = *in
	in.Metadata.DeepCopyInto(&out.Metadata)
	out.Spec = in.Spec
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertCondition.
func (in *AlertCondition) DeepCopy() *AlertCondition {
	if in == nil {
		return nil
	}
	out := new(AlertCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertConditionSpec) DeepCopyInto(out *AlertConditionSpec) {
	*out = *in
	out.Condition = in.Condition
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertConditionSpec.
func (in *AlertConditionSpec) DeepCopy() *AlertConditionSpec {
	if in == nil {
		return nil
	}
	out := new(AlertConditionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertConditionType) DeepCopyInto(out *AlertConditionType) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertConditionType.
func (in *AlertConditionType) DeepCopy() *AlertConditionType {
	if in == nil {
		return nil
	}
	out := new(AlertConditionType)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertNotificationTarget) DeepCopyInto(out *AlertNotificationTarget) {
	*out = *in
	in.Metadata.DeepCopyInto(&out.Metadata)
	out.Spec = in.Spec
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertNotificationTarget.
func (in *AlertNotificationTarget) DeepCopy() *AlertNotificationTarget {
	if in == nil {
		return nil
	}
	out := new(AlertNotificationTarget)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertNotificationTargetSpec) DeepCopyInto(out *AlertNotificationTargetSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertNotificationTargetSpec.
func (in *AlertNotificationTargetSpec) DeepCopy() *AlertNotificationTargetSpec {
	if in == nil {
		return nil
	}
	out := new(AlertNotificationTargetSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertPolicy) DeepCopyInto(out *AlertPolicy) {
	*out = *in
	in.Metadata.DeepCopyInto(&out.Metadata)
	in.Spec.DeepCopyInto(&out.Spec)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertPolicy.
func (in *AlertPolicy) DeepCopy() *AlertPolicy {
	if in == nil {
		return nil
	}
	out := new(AlertPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertPolicyCondition) DeepCopyInto(out *AlertPolicyCondition) {
	*out = *in
	if in.AlertPolicyConditionRef != nil {
		in, out := &in.AlertPolicyConditionRef, &out.AlertPolicyConditionRef
		*out = new(AlertPolicyConditionRef)
		**out = **in
	}
	if in.AlertPolicyInlineCondition != nil {
		in, out := &in.AlertPolicyInlineCondition, &out.AlertPolicyInlineCondition
		*out = new(AlertPolicyInlineCondition)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertPolicyCondition.
func (in *AlertPolicyCondition) DeepCopy() *AlertPolicyCondition {
	if in == nil {
		return nil
	}
	out := new(AlertPolicyCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertPolicyConditionRef) DeepCopyInto(out *AlertPolicyConditionRef) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertPolicyConditionRef.
func (in *AlertPolicyConditionRef) DeepCopy() *AlertPolicyConditionRef {
	if in == nil {
		return nil
	}
	out := new(AlertPolicyConditionRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertPolicyInlineCondition) DeepCopyInto(out *AlertPolicyInlineCondition) {
	*out = *in
	in.Metadata.DeepCopyInto(&out.Metadata)
	out.Spec = in.Spec
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertPolicyInlineCondition.
func (in *AlertPolicyInlineCondition) DeepCopy() *AlertPolicyInlineCondition {
	if in == nil {
		return nil
	}
	out := new(AlertPolicyInlineCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertPolicyNotificationTarget) DeepCopyInto(out *AlertPolicyNotificationTarget) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertPolicyNotificationTarget.
func (in *AlertPolicyNotificationTarget) DeepCopy() *AlertPolicyNotificationTarget {
	if in == nil {
		return nil
	}
	out := new(AlertPolicyNotificationTarget)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AlertPolicySpec) DeepCopyInto(out *AlertPolicySpec) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]AlertPolicyCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NotificationTargets != nil {
		in, out := &in.NotificationTargets, &out.NotificationTargets
		*out = make([]AlertPolicyNotificationTarget, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AlertPolicySpec.
func (in *AlertPolicySpec) DeepCopy() *AlertPolicySpec {
	if in == nil {
		return nil
	}
	out := new(AlertPolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in Annotations) DeepCopyInto(out *Annotations) {
	{
		in := &in
		*out = make(Annotations, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Annotations.
func (in Annotations) DeepCopy() Annotations {
	if in == nil {
		return nil
	}
	out := new(Annotations)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Calendar) DeepCopyInto(out *Calendar) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Calendar.
func (in *Calendar) DeepCopy() *Calendar {
	if in == nil {
		return nil
	}
	out := new(Calendar)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSource) DeepCopyInto(out *DataSource) {
	*out = *in
	in.Metadata.DeepCopyInto(&out.Metadata)
	in.Spec.DeepCopyInto(&out.Spec)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSource.
func (in *DataSource) DeepCopy() *DataSource {
	if in == nil {
		return nil
	}
	out := new(DataSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataSourceSpec) DeepCopyInto(out *DataSourceSpec) {
	*out = *in
	if in.ConnectionDetails != nil {
		in, out := &in.ConnectionDetails, &out.ConnectionDetails
		*out = make(json.RawMessage, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataSourceSpec.
func (in *DataSourceSpec) DeepCopy() *DataSourceSpec {
	if in == nil {
		return nil
	}
	out := new(DataSourceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in Label) DeepCopyInto(out *Label) {
	{
		in := &in
		*out = make(Label, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Label.
func (in Label) DeepCopy() Label {
	if in == nil {
		return nil
	}
	out := new(Label)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in Labels) DeepCopyInto(out *Labels) {
	{
		in := &in
		*out = make(Labels, len(*in))
		for key, val := range *in {
			var outVal []string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = make(Label, len(*in))
				copy(*out, *in)
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Labels.
func (in Labels) DeepCopy() Labels {
	if in == nil {
		return nil
	}
	out := new(Labels)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Metadata) DeepCopyInto(out *Metadata) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(Labels, len(*in))
		for key, val := range *in {
			var outVal []string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = make(Label, len(*in))
				copy(*out, *in)
			}
			(*out)[key] = outVal
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(Annotations, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Metadata.
func (in *Metadata) DeepCopy() *Metadata {
	if in == nil {
		return nil
	}
	out := new(Metadata)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Objective) DeepCopyInto(out *Objective) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Objective.
func (in *Objective) DeepCopy() *Objective {
	if in == nil {
		return nil
	}
	out := new(Objective)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RatioMetric) DeepCopyInto(out *RatioMetric) {
	*out = *in
	if in.Good != nil {
		in, out := &in.Good, &out.Good
		*out = new(SLIMetricSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Bad != nil {
		in, out := &in.Bad, &out.Bad
		*out = new(SLIMetricSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Total != nil {
		in, out := &in.Total, &out.Total
		*out = new(SLIMetricSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.RawType != nil {
		in, out := &in.RawType, &out.RawType
		*out = new(string)
		**out = **in
	}
	if in.Raw != nil {
		in, out := &in.Raw, &out.Raw
		*out = new(SLIMetricSpec)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RatioMetric.
func (in *RatioMetric) DeepCopy() *RatioMetric {
	if in == nil {
		return nil
	}
	out := new(RatioMetric)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SLI) DeepCopyInto(out *SLI) {
	*out = *in
	in.Metadata.DeepCopyInto(&out.Metadata)
	in.Spec.DeepCopyInto(&out.Spec)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SLI.
func (in *SLI) DeepCopy() *SLI {
	if in == nil {
		return nil
	}
	out := new(SLI)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SLIMetricSource) DeepCopyInto(out *SLIMetricSource) {
	*out = *in
	if in.MetricSourceSpec != nil {
		in, out := &in.MetricSourceSpec, &out.MetricSourceSpec
		*out = make(json.RawMessage, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SLIMetricSource.
func (in *SLIMetricSource) DeepCopy() *SLIMetricSource {
	if in == nil {
		return nil
	}
	out := new(SLIMetricSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SLIMetricSpec) DeepCopyInto(out *SLIMetricSpec) {
	*out = *in
	in.MetricSource.DeepCopyInto(&out.MetricSource)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SLIMetricSpec.
func (in *SLIMetricSpec) DeepCopy() *SLIMetricSpec {
	if in == nil {
		return nil
	}
	out := new(SLIMetricSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SLISpec) DeepCopyInto(out *SLISpec) {
	*out = *in
	if in.ThresholdMetric != nil {
		in, out := &in.ThresholdMetric, &out.ThresholdMetric
		*out = new(SLIMetricSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.RatioMetric != nil {
		in, out := &in.RatioMetric, &out.RatioMetric
		*out = new(RatioMetric)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SLISpec.
func (in *SLISpec) DeepCopy() *SLISpec {
	if in == nil {
		return nil
	}
	out := new(SLISpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SLO) DeepCopyInto(out *SLO) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SLO.
func (in *SLO) DeepCopy() *SLO {
	if in == nil {
		return nil
	}
	out := new(SLO)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SLO) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SLOIndicator) DeepCopyInto(out *SLOIndicator) {
	*out = *in
	in.Metadata.DeepCopyInto(&out.Metadata)
	in.Spec.DeepCopyInto(&out.Spec)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SLOIndicator.
func (in *SLOIndicator) DeepCopy() *SLOIndicator {
	if in == nil {
		return nil
	}
	out := new(SLOIndicator)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SLOList) DeepCopyInto(out *SLOList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SLO, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SLOList.
func (in *SLOList) DeepCopy() *SLOList {
	if in == nil {
		return nil
	}
	out := new(SLOList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SLOList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SLOSpec) DeepCopyInto(out *SLOSpec) {
	*out = *in
	if in.Indicator != nil {
		in, out := &in.Indicator, &out.Indicator
		*out = new(SLOIndicator)
		(*in).DeepCopyInto(*out)
	}
	if in.IndicatorRef != nil {
		in, out := &in.IndicatorRef, &out.IndicatorRef
		*out = new(string)
		**out = **in
	}
	if in.TimeWindow != nil {
		in, out := &in.TimeWindow, &out.TimeWindow
		*out = make([]TimeWindow, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Objectives != nil {
		in, out := &in.Objectives, &out.Objectives
		*out = make([]Objective, len(*in))
		copy(*out, *in)
	}
	if in.AlertPolicies != nil {
		in, out := &in.AlertPolicies, &out.AlertPolicies
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SLOSpec.
func (in *SLOSpec) DeepCopy() *SLOSpec {
	if in == nil {
		return nil
	}
	out := new(SLOSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SLOStatus) DeepCopyInto(out *SLOStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]metav1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.LastEvaluationTime.DeepCopyInto(&out.LastEvaluationTime)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SLOStatus.
func (in *SLOStatus) DeepCopy() *SLOStatus {
	if in == nil {
		return nil
	}
	out := new(SLOStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Service) DeepCopyInto(out *Service) {
	*out = *in
	in.Metadata.DeepCopyInto(&out.Metadata)
	out.Spec = in.Spec
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Service.
func (in *Service) DeepCopy() *Service {
	if in == nil {
		return nil
	}
	out := new(Service)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceSpec) DeepCopyInto(out *ServiceSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceSpec.
func (in *ServiceSpec) DeepCopy() *ServiceSpec {
	if in == nil {
		return nil
	}
	out := new(ServiceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TimeWindow) DeepCopyInto(out *TimeWindow) {
	*out = *in
	if in.Calendar != nil {
		in, out := &in.Calendar, &out.Calendar
		*out = new(Calendar)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TimeWindow.
func (in *TimeWindow) DeepCopy() *TimeWindow {
	if in == nil {
		return nil
	}
	out := new(TimeWindow)
	in.DeepCopyInto(out)
	return out
}
