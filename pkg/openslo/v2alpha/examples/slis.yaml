- apiVersion: openslo.com/v2alpha
  kind: SLI
  metadata:
    name: search-availability
    labels:
      env: dev
      team: team-a
  spec:
    description: X% of search requests are successful
    ratioMetric:
      counter: true
      good:
        dataSourceRef: my-datadog
        spec:
          query: sum:trace.http.request.hits.by_http_status{http.status_code:200}.as_count()
      total:
        dataSourceRef: my-datadog
        spec:
          query: sum:trace.http.request.hits.by_http_status{*}.as_count()
- apiVersion: openslo.com/v2alpha
  kind: SLI
  metadata:
    name: end-user-response
    labels:
      env: dev
      team: team-a
  spec:
    ratioMetric:
      counter: false
      bad:
        dataSourceRef: appdynamics
        spec:
          applicationName: my-app
          metricPath: End User Experience|App|Slow Requests
      total:
        dataSourceRef: appdynamics
        spec:
          applicationName: my-app
          metricPath: End User Experience|App|Normal Requests
- apiVersion: openslo.com/v2alpha
  kind: SLI
  metadata:
    name: wifi-client-satisfaction
    labels:
      env: dev
      team: team-a
  spec:
    description: Monitors that we have an average wifi connection satisfaction
    ratioMetric:
      rawType: success
      raw:
        dataSourceRef: prometheus
        spec:
          query: |
            1 - (
              sum(sum_over_time(poller_client_satisfaction_ratio[{{.window}}]))
              /
              sum(count_over_time(poller_client_satisfaction_ratio[{{.window}}]))
            )
- apiVersion: openslo.com/v2alpha
  kind: SLI
  metadata:
    name: annotator-throughput
    annotations:
      openslo.com/service-folder: ./my/directory
    labels:
      env: dev
      team: team-a
  spec:
    description: X% of time messages are processed without delay by the processing pipeline (expected value ~100%)
    thresholdMetric:
      dataSourceRef: my-prometheus
      spec:
        query: sum(min_over_time(kafka_consumergroup_lag{k8s_cluster="prod", consumergroup="annotator", topic="annotator-in"}[2m]))
- apiVersion: openslo.com/v2alpha
  kind: SLI
  metadata:
    name: annotator-throughput-with-data-source-spec
    annotations:
      openslo.com/service-folder: ./my/directory
    labels:
      env: dev
      team: team-a
  spec:
    description: X% of time messages are processed without delay by the processing pipeline (expected value ~100%)
    thresholdMetric:
      dataSourceSpec:
        type: Prometheus
        connectionDetails:
          accessToken: secretToken
      spec:
        query: sum(min_over_time(kafka_consumergroup_lag{k8s_cluster="prod", consumergroup="annotator", topic="annotator-in"}[2m]))
